name: Build and Deploy Node.js App to Azure Web App - Linux

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'home-builder-form'
  AZURE_WEBAPP_PACKAGE_PATH: 'release.zip'
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # CHANGED: Install ALL dependencies
      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build --if-present

      - name: Check server.js for errors
        run: node --check server.js && echo "✅ server.js syntax is valid"

      - name: Zip for deployment
        run: zip -r ${{ env.AZURE_WEBAPP_PACKAGE_PATH }} . -x ".git/*" "*.log" ".env*" "test/*"

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure Azure App Settings
        run: |
          az webapp config appsettings set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --settings \
              PORT=8080 \
              NODE_ENV=production \
              WEBSITES_PORT=8080 \
              WEBSITES_ENABLE_APP_SERVICE_STORAGE=true \
              SHAREPOINT_CLIENT_ID=${{ secrets.SHAREPOINT_CLIENT_ID }} \
              SHAREPOINT_CLIENT_SECRET=${{ secrets.SHAREPOINT_CLIENT_SECRET }} \
              SHAREPOINT_TENANT_ID=${{ secrets.SHAREPOINT_TENANT_ID }}

      - uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production'
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          startup-command: "node server.js"

      - name: Check application deployment
        run: |
          HOSTNAME=$(az webapp show \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --query "defaultHostName" -o tsv)
          echo "Application deployed to: https://$HOSTNAME"
          echo "Health endpoint: https://$HOSTNAME/api/health"
          echo "Waiting 60 seconds for container to initialize..."
          sleep 60
          curl -f -s --max-time 10 "https://$HOSTNAME/api/health" && echo "✅ Application is responding!" || echo "⚠️ Application may still be starting"