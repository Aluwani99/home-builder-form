name: Build and Deploy Node.js App to Azure Web App - Linux

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'home-builder-form'
  AZURE_WEBAPP_PACKAGE_PATH: 'release.zip'
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # 3️⃣ Install backend dependencies
      - name: Install backend dependencies
        run: npm ci --only=production

      # 4️⃣ Check server.js for syntax errors
      - name: Check server.js for errors
        run: node --check server.js && echo "✅ server.js syntax is valid"

      # 5️⃣ Zip for deployment
      - name: Zip for deployment
        run: zip -r ${{ env.AZURE_WEBAPP_PACKAGE_PATH }} . -x ".git/*" "node_modules/*" "*.log" ".env*" "test/*" "counter.json" "uploads/*"

      # 6️⃣ Login to Azure
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 7️⃣ Deploy to Azure Web App
      - uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production'
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          startup-command: "npm start"

      # 8️⃣ Health check with retry loop
      - name: Check application deployment
        run: |
          HOSTNAME=$(az webapp show \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --query "defaultHostName" -o tsv)
          echo "Application deployed to: https://$HOSTNAME"
          echo "Health endpoint: https://$HOSTNAME/api/health"

          for i in {1..30}; do
            echo "Attempt $i: Checking health endpoint..."
            if curl -s --max-time 10 https://$HOSTNAME/api/health; then
              echo "✅ Application is responding!"
              exit 0
            fi
            echo "⏳ Still not ready, waiting 10s..."
            sleep 10
          done

          echo "⚠️ Application did not respond within 5 minutes"
          exit 0  # Don't fail workflow, just warn
